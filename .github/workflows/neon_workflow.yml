THIS SHOULD BE A LINTER ERRORname: Create/Delete Branch for Pull Request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: read
  pull-requests: write

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create_neon_branch:
    name: Create Neon Branch
    outputs:
      db_url: ${{ steps.create_neon_branch.outputs.db_url }}
      db_url_with_pooler: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
      github.event.action == 'synchronize'
      || github.event.action == 'opened'
      || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Try to delete existing branch if it exists
      - name: Delete existing branch if present
        continue-on-error: true
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch: preview-pr-${{ github.event.number }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Wait after deletion
        run: sleep 5

      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview-pr-${{ github.event.number }}
          api_key: ${{ secrets.NEON_API_KEY }}
          database: fallout-factions-tracker

      - name: Install Dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Install Neon CLI
        run: npm install -g neonctl@latest

      - name: Wait for branch to be ready
        run: |
          echo "Waiting for branch to be ready..."
          for i in {1..30}; do
            status=$(neonctl branches get preview-pr-${{ github.event.number }} --project-id ${{ vars.NEON_PROJECT_ID }} --api-key ${{ secrets.NEON_API_KEY }} | jq -r '.current_state')
            if [ "$status" = "ready" ]; then
              echo "Branch is ready!"
              exit 0
            fi
            echo "Attempt $i: Branch status is $status, waiting..."
            sleep 5
          done
          echo "Branch did not become ready in time"
          exit 1

      - name: Run Database Migrations
        run: |
          echo "Running migrations with URL: ${DATABASE_URL/\?*}"
          npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}

      - name: Post Schema Diff Comment to PR
        uses: neondatabase/schema-diff-action@v1
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          compare_branch: preview-pr-${{ github.event.number }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Comment PR with Database URL
        uses: actions/github-script@v7
        with:
          script: |
            const dbUrl = process.env.DB_URL;
            const dbBranch = 'preview-pr-${{ github.event.number }}';
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `ðŸ”Œ Preview database is ready!\n\n- Database Branch: \`${dbBranch}\`\n\nTo use this database in your Vercel preview deployment, add this environment variable:\n\`\`\`\nDATABASE_URL=${dbUrl}\n\`\`\``
            });
        env:
          DB_URL: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}

  delete_neon_branch:
    name: Delete Neon Branch
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch: preview-pr-${{ github.event.number }}
          api_key: ${{ secrets.NEON_API_KEY }}
