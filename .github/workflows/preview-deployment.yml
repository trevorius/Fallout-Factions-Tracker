name: Preview Database Branch

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create-preview-db:
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
        github.event.action == 'opened' ||
        github.event.action == 'reopened' ||
        github.event.action == 'synchronize'
      )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Comment PR with Database URL
        uses: actions/github-script@v7
        with:
          script: |
            const dbUrl = process.env.DB_URL;
            const dbBranch = 'preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}';
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `ï¿½ Preview database is ready!\n\n- Database Branch: \`${dbBranch}\`\n\nTo use this database in your Vercel preview deployment, add this environment variable:\n\`\`\`\nDATABASE_URL=${dbUrl}\n\`\`\``
            });
        env:
          DB_URL: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}

  cleanup-preview-db:
    needs: setup
    if: |
      github.event_name == 'pull_request' && 
      github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}