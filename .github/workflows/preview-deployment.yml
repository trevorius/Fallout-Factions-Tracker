name: Preview Deployment

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create-preview:
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
        github.event.action == 'opened' ||
        github.event.action == 'reopened' ||
        github.event.action == 'synchronize'
      )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Set Preview Database URL
        run: vercel env add DATABASE_URL ${{ steps.create_neon_branch.outputs.db_url_with_pooler }} preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: |
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} \
            --env DATABASE_URL=${{ steps.create_neon_branch.outputs.db_url_with_pooler }} \
            > deployment-url.txt

      - name: Run Database Migrations
        run: |
          npm ci
          npx prisma migrate deploy

      - name: Get Deployment URL
        id: get-url
        run: echo "::set-output name=url::$(cat deployment-url.txt)"

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = process.env.DEPLOYMENT_URL;
            const dbBranch = 'preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}';
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `ðŸš€ Preview deployment is ready!\n\n- Deployment URL: ${deploymentUrl}\n- Database Branch: \`${dbBranch}\``
            });
        env:
          DEPLOYMENT_URL: ${{ steps.get-url.outputs.url }}

  cleanup-preview:
    needs: setup
    if: |
      github.event_name == 'pull_request' && 
      github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Delete Vercel Deployment
        run: |
          vercel remove preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }} --token=${{ secrets.VERCEL_TOKEN }} --yes